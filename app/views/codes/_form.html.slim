//
// Form for codes (title input and code editor)
//

= form_for @code, html: {id: 'editor-form', class: 'form-stacked'} do |f|
  // Errors
  - if @code.errors.any?
    #error_explanation
      h3 = "#{pluralize(@code.errors.count, "error")} prohibited this code from being saved:"
      ul
        - @code.errors.full_messages.each do |msg|
          li= msg

  - if opts[:title]
    // Title
    h2 
      = link_to @code.title, code_path(@code)

  - if opts[:author]
    p.author
      ' by
      = render @code.user

  - if opts[:title_form]
    // code.title
    .clearfix
      = f.label :title
      .input
        = f.text_field :title, class: 'xlarge'
  - else
    = f.hidden_field :title, id: 'code-title'

  // code.body
  // set by onSaveCliced (see codes.js.coffee)
  = f.hidden_field :body, id: 'code-body'

  // Buttons
  .row.clearfix
    // Run button
    .span1.offset8
      = button_tag 'Run', type: 'button', id: 'run', class: 'btn'
    // Reset button
    .span1.offset5
      = button_tag 'Reset', type: 'button', id: 'reset', class: 'disabled btn'

  .board.clearfix
    .left
      #editor
        = @code.body
    .right
      iframe#stage name="stage" src=codes_stage_path

  // Button save
  .row
    .span1.offset6
      - case opts[:save_as_new]
      - when :show
        #save-as-new
          = submit_tag 'Save as new', id: 'save', class: 'btn primary large'
      - when :hide
        #save-as-new.hide
          = submit_tag 'Save as new', id: 'save', class: 'btn primary large'
      - else
        // Value must be 'Save' (see codes.js.coffee)
        = f.submit 'Save', id: 'save', class: 'btn primary large'

// Modal
#modal-please-sign-in.modal.hide
  .modal-header
    h3 Login required

  .modal-body
    ' Please
    = link_to 'sign in', new_user_session_path, target: '_blank'
    '  or
    = link_to 'sign up', new_user_registration_path, target: '_blank'
    '  first.
    
  .modal-footer
    a#close-please-sign-in.btn
      | close
